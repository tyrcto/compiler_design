=========================================
=
=	CHANGES
=
=========================================
Variable names changes
- tokenOper() -> tokenChar()

Modifications
- Some Reg definitions are split to be able to handle compound operators separately
- {INTEGER} Reg definition added with [-\+]? to handle negative integers
- moved some C declarations & code to separate files (symbols.hh & symbols.cc)
- rearrangements of code
- strsplice() function removed, string splicing done without addtional function (observed at {STRING})
- added "return" statements to work with YACC

Additions
- tokenDchar(): used for compound operators
- option to toggle whether to print out tokens or not
- added 1 new reserved keywords ("in") & 1 compound operator ("..") to handle FOR LOOP
- Carriage return char ('\r') keeps breaking the code, hence it is added with [ \t] regex

=========================================
=
=	NOTES
=
=========================================
If "make" fails:
flex -o lex.yy.cc scanner.l
bison -y -o y.tab.cc -d parser.y
g++ -o parser y.tab.cc lex.yy.cc symbols.cc -ll -ly 

or

lex -o lex.yy.cpp scanner.l
yacc -o y.tab.cc -d parser.y 
g++ -o parser y.tab.cc lex.yy.cc symbols.cc -ll -ly 